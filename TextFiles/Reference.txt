Reference:

All values used in the project will be here.

-----Inventory/Equipment Reference-----
0: Nothing in space.
1: Potion
2: Key
3: Sword
4: Armor

-----Map Notation-----
0 - Wall tile.
1 - Start tile.
2 - Walking tile.
3 - Enemy tile.
4 - Treasure tile.
5 - Refresh/Fountain tile.
6 - Boss tile.

Ideas:
-----Revamped Treasure Notation-----
Approach 1: Giving the player what I want them to have.
Approach 2: Giving the player what they don't have
Approach 3: Giving the player anything.

Approach 1 works best if the game will not be randomly generated so let's do that.
Treasure tile: 4.
4X means Treasure that gives X where X is:
1: Potion
2: Key
3: Sword
4: Armor

For now, there will only be 1 kind of sword and 1 kind of armor, but what
if I had more than 1? I could write 431 for 1, and 432 for another. This
feels kind of sloppy but would work because I would not have more than 10 swords.

-----Battle Functionality-----
When battle tiles are triggered, enemies will appear and fight the player.
Special enemies appear in different tiles and are bosses. The player
should be able to attack, defend, and use item. No escape.

-----Floor Functionality-----
LOW PRIORITY. Be able to move between floors into different maps by loading
different text files.

-----Play with Any Text File-----
Instead of only playing with the given text file, users could make
their own map by reading the notation and making a suitable text file.
The game could then read this and you could play.

-----Randomly Generated Maps-----
As the game is based on a txt file, we could generate a random txt
file to play with!


-----Proceduraly Generated Maps-----
Further, instead of generating a random txt file entirely, the game could
generate the floor as the player explores.
